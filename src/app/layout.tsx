import classNames from "classnames";
import { Noto_Sans_JP, Montserrat } from "next/font/google";
import { cookies } from "next/headers";

import "./globals.css";
import { Theme, ThemeProvider } from "../components/ThemeMode";
import { ThemeCookieKey } from "../utils/constants";

const noto = Noto_Sans_JP({
  subsets: ["latin"],
  variable: "--font-noto",
  display: "swap",
  weight: ["100", "400"],
});

const montserrat = Montserrat({
  subsets: ["latin"],
  variable: "--font-montserrat",
  display: "swap",
  weight: ["400", "700"],
});

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const getCookieThemeValue = () => {
  const cookie = cookies().get(ThemeCookieKey);
  if (cookie) {
    return cookie?.value as (typeof Theme)[keyof typeof Theme];
  }
};
export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const themeValue = getCookieThemeValue();
  return (
    <ThemeProvider initialTheme={themeValue}>
      <html lang="es">
        <body className={classNames(montserrat.variable, noto.variable)}>
          {children}
        </body>
      </html>
    </ThemeProvider>
  );
}
